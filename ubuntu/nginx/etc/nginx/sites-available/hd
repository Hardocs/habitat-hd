server {
    charset utf8;
    server_name hd.narrationsd.com;
    server_name_in_redirect on;

    # fix what Fauxton does, redirect that floats back if _utils w/o slash
    rewrite ^([\w/-]*_util[^/])$ $1/ redirect;

    root /var/www/hd;

    set $oauth2_proxy 127.0.0.1:4180;

    location ~ ^/hard-api/ {
        add_header Access-Control-Allow-Origin "$http_origin";
        add_header Access-Control-Allow-Credentials "true";
        add_header Referrer-Policy "no-referrer-when-downgrade";
        proxy_pass http://$oauth2_proxy;   
        proxy_redirect off;
        proxy_buffering off;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_headers_hash_max_size 1024;
	proxy_headers_hash_bucket_size 128;

        proxy_set_header Host $host;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Auth-Request-Redirect $request_uri;
        add_header X-request-uri "$request_uri";

        auth_request_set $user   $upstream_http_x_auth_request_user;
        auth_request_set $email  $upstream_http_x_auth_request_email;
        proxy_set_header X-User  $user;
        proxy_set_header X-Email $email;

        proxy_connect_timeout 1;
        proxy_send_timeout 30;
        proxy_read_timeout 30;

    proxy_pass_header  Set-Cookie;
    proxy_pass_header  P3P;

    proxy_cookie_domain localhost narrationsd.com;
    auth_request_set $auth_cookie $upstream_http_set_cookie;
    add_header Set-Cookie "$auth_cookie";
    add_header X-auth_cookie "$auth_cookie";

    proxy_pass_header Accept;
    proxy_pass_header Server;
#    keepalive_requests 1000;
    proxy_set_header Authorization ""; # or according to server.ini

         proxy_set_header X-Auth-Request-Redirect $request_uri;  

     if ($request_method = 'OPTIONS') {
        # add_header 'Access-Control-Allow-Origin' '*';
        add_header Access-Control-Allow-Origin "$http_origin";
        add_header Access-Control-Allow-Credentials "true";
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #
        # Custom headers and headers various browsers *should* be OK with but aren't
        #
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        #
        # Tell client that this pre-flight info is valid for 20 days
        #
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
     }
     if ($request_method = 'POST') {
        add_header Access-Control-Allow-Origin "$http_origin";
        add_header Access-Control-Allow-Credentials "true";
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
     }
     if ($request_method = 'GET') {
       # add_header 'Access-Control-Allow-Origin' '*';
        add_header Access-Control-Allow-Origin "$http_origin";
        add_header Access-Control-Allow-Credentials "true";
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
     }
    }

    location = /robots.txt  { access_log off; log_not_found off; }
    location = /favicon.ico { access_log off; log_not_found off; }
    location ~ /\. { access_log off; log_not_found off; deny all; }
    location = /tos.html {}
    location = /privacy.html {}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/lv.narrationsd.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/lv.narrationsd.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = hd.narrationsd.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


#    if ($host = hd.narrationsd.com) {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot


    server_name hd.narrationsd.com;
    root /var/www/hd/web/hd;

    # Add index.php to the list if you are using PHP
    # index index.html index.htm index.php index.nginx-debian.html;

    # location ~ ^(.*)$ {
     #    try_files $uri $uri/ /index.php?p=$uri&$args;
    # }

    listen 80;
    return 404; # managed by Certbot




}
